<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgEBAAICAQAEBAMACQkGAAwLCAAODQkAExEMABMSDQAaGBEAHhwUAB8cFAAfHRQAIh8WACMg
        FwAkIRgAKCYbADMwIgA2MiMANzMkADo2JgA9OSgARD8tAEVALQBGQS4AR0IuAElEMABNRzIAUkw2AFNN
        NgBaVDsAXFU8AF1WPQBfWD4AYFk/AGRcQQBlXkIAZl5CAGdfQwBoYEQAamJFAGxkRgB0a0wAdWxMAHlw
        TwB6clAAfHNRAH51UgB/dVMAf3ZTAIB3VACEelYAiX9ZAIqAWgCSh2AAn5RpAKmdbwCvo3MAs6Z1ALap
        dwC3qngAuat5ALutegC9r3wAwLJ+AMGyfgDBs34AxLaAAMu8hADNvoYA0MCIANLCiQDSw4kA08OKANXF
        iwDVxosA1saMANfHjQDXyI0A2MiNANnKjgDayo8A28uPAN/OkgDfz5IA4NCTAOHQkwDh0ZMA4tGUAOPS
        lADm1ZYA59aXAOjXlwDp2JgA6diZAOnZmQDq2ZkA69qZAOvamgDs2poA7NubAO3cmwDu3JsA7t2cAO/e
        nADw3p0A8N+dAPHfnQDx4J4A8uGeAPPhnwDz4p8A9OKfAPTioAD046AA9eOgAPXkoAD25aEA9+WiAPnn
        owD96qUA/+6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQgHBwcHBwcHBwcHBwcHBAQHBwcHBwcHBwcHBwcHCAEIeXNzc3Nzc3Nzc3Nzc3MtLXNzc3Nz
        c3Nzc3Nzc3N5CAdzYGNgYGBgYGBgYGJgYCsrYGBgYGBgYGBgYGBgYHMHB3NnMFtgYGBgYGBqNkVgKytg
        YGBgYGo8V2BgYGBgcwcHc2BDAG5gYGBgazEUcWArK2BgYGBnFAAAQmBgYGBzBwdzYGBPDUxgYGgfJ2xg
        YCsrYGBgYFYCAAAzYGBgYHMHB3NgYGA+DElqHiZsYGBgKytgYGBgYjkTImVgYGBgcwcHc2BgYGBTCho0
        aWBgYGArK2BcTk9PT1RRT09PWGBzBwdzYGBgYHAWDEdgYGBgYCsrYEAnKCgoKCgoKCguaHMHB3NgYGBy
        FTJgAEZgYGBgKytgYGBgYGB2dF9gYGBgcwcHc2BgbyEgamA/D1ZgYGArK2BgYGBgQQAFRGBgYGBzBwdz
        YG8fL2tgYGBJAVJeYCsrYGBgYGYcAAAQbWBgYHMHB3NlIyptYGBgYGBKC05gKytgYGBgYDoABj1gYGBg
        cwcHc2FQZmBgYGBgYGBZWmArK2BgYGBgYnZ0YGBgYGBzBwdzYGBgYGBgYGBgYGBgYCsrYGBgYGBgYGBg
        YGBgYHMHBC0rKysrKysrKysrKysrFBQrKysrKysrKysrKysrLQQJLCsrKysrKysrKysrKysUFCsrKysr
        KysrKysrKystBBFsYGBgYGBgYGBgYGBgYCsrYGBgYGBgYGBgYGBgYHMHEWxgYGBgYEs3YmBgYGBgKytg
        YGBgYGBgYGBgYGBgcwcRbGBgYGBgOxtmYGBgYGArK2BgYGBgYGBgYGBgYGBzBxFsYGBgYGA8G2ZgYGBg
        YCsrYGBgYGBgYGBgYGBgYHMHEWxgYGBgYDwbZmBgYGBgKytgYGBgYGBgYGBgYGBgcwcRbGBgYGBgPBtm
        YGBgYGArK2BgYGVmZmZmZmZmZGBzBxFsZjUoKCgdDikoKCVIYCsrYGBvFxgYGBgYGBgkaXMHEWxgVU9P
        TzgZUk9PTWBgKytgYF13d3d3d3d3d3VecwcRbGBgYGBgPBtmYGBgYGArK2BgYGBgYGBgYGBgYGBzBxFs
        YGBgYGA8G2ZgYGBgYCsrYGBgYGBgYGBgYGBgYHMHEWxgYGBgYDsbZmBgYGBgKytgYGBgYGBgYGBgYGBg
        cwcRbGBgYGBgSzdiYGBgYGArK2BgYGBgYGBgYGBgYGBzBxFsYGBgYGBgYGBgYGBgYCsrYGBgYGBgYGBg
        YGBgYHMHEnhzc3Nzc3Nzc3Nzc3NzLS1zc3Nzc3Nzc3Nzc3NzeQgDCAcHBwcHBwcHBwcHBwcEBAcHBwcH
        BwcHBwcHBwcIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>